:stmt
    set c, token_name
    ifg b, 8
        set pc, pop

    set pc, [stmt_table + b - 1]

:stmt_table
    dat stmt_1
    dat stmt_2
    dat stmt_3
    dat stmt_4
    dat stmt_5
    dat stmt_6
    dat stmt_7
    dat stmt_8

:stmt_1
:stmt_7
    set pc, pop


:stmt_2
    ife [a + 0], 'i'
        set pc, stmt_2_i
    ifn [a + 0], 'o'
        set pc, pop
    ife [a + 1], 'r'
        set c, token_or
    set pc, pop

:stmt_2_i
    ife [a + 1], 'f'
        set pc, stmt_2_if
    ife [a + 1], 'n'
        set pc, stmt_2_in
    ifn [a + 1], 's'
        set pc, pop
    set c, token_is
    set pc, pop

:stmt_2_if
    set c, token_if
    set pc, pop

:stmt_2_in
    set c, token_in
    set pc, pop

:stmt_3
    ifl [a + 0], 'i'
        set pc, stmt_3_a_to_f

:stmt_3_i_to_t
    ifl [a + 0], 'r'
        set pc, stmt_3_i_to_n

:stmt_3_r_to_t
    ife [a + 0], 'r'
        set pc, stmt_3_r
    ifn [a + 0], 't'
        set pc, pop
    ife [a + 1], 'r'
        ife [a + 2], 'y'
            set c, token_try
    set pc, pop

:stmt_3_r
    ife [a + 1], 'u'
        ife [a + 2], 'n'
            set c, token_run
    set pc, pop

:stmt_3_i_to_n
    ife [a + 0], 'i'
        set pc, stmt_3_i
    ifn [a + 0], 'n'
        set pc, pop
    ife [a + 1], 'a'
        set pc, stmt_3_na
    ifn [a + 1], 'o'
        set pc, pop
    ife [a + 2], 't'
        set c, token_not
    set pc, pop

:stmt_3_na
    ife [a + 2], 'n'
        set c, token_float
    set pc, pop

:stmt_3_i
    ife [a + 1], 'n'
        ife [a + 2], 'f'
            set c, token_float
    set pc, pop

:stmt_3_a_to_f
    ifl [a + 0], 'd'
        set pc, stmt_3_a_to_c

:stmt_3_d_to_f
    ife [a + 0], 'd'
        set pc, stmt_3_d
    ifn [a + 0], 'f'
        set pc, pop
    ife [a + 1], 'o'
        ife [a + 2], 'r'
            set c, token_for
    set pc, pop

:stmt_3_d
    ife [a + 1], 'e'
        ife [a + 2], 'l'
            set c, token_del
    set pc, pop

:stmt_3_a_to_c
    ife [a + 0], 'a'
        set pc, stmt_3_a
    ifn [a + 0], 'c'
        set pc, pop
    ife [a + 1], 'l'
        ife [a + 2], 's'
            set c, token_cls
    set pc, pop

:stmt_3_a
    ife [a + 1], 'n'
        ife [a + 2], 'd'
            set c, token_and
    set pc, pop

:stmt_4
    ifl [a + 0], 'p'
        set pc, stmt_4_e_to_n

:stmt_4_p_to_t
    ife [a + 0], 'p'
        set pc, stmt_4_p
    ifn [a + 0], 't'
        set pc, pop
    ife [a + 1], 'r'
        ife [a + 2], 'u'
            ife [a + 3], 'e'
                set c, token_true
    set pc, pop

:stmt_4_p
    ife [a + 1], 'a'
        ife [a + 2], 's'
            ife [a + 3], 's'
                set c, token_pass
    set pc, pop

:stmt_4_e_to_n
    ife [a + 0], 'e'
        set pc, stmt_4_e
    ifn [a + 0], 'n'
        set pc, pop
    ife [a + 1], 'o'
        ife [a + 2], 'n'
            ife [a + 3], 'e'
                set c, token_none
    set pc, pop

:stmt_4_e
    ifn [a + 1], 'l'
        set pc, pop
    ife [a + 2], 'i'
        set pc, stmt_4_eli
    ifn [a + 2], 's'
        set pc, pop
    ife [a + 3], 'e'
        set c, token_else
    set pc, pop

:stmt_4_eli
    ife [a + 3], 'f'
        set c, token_elif
    set pc, pop

:stmt_5
    ifl [a + 0], 'p'
        set pc, stmt_5_b_to_f

:stmt_5_p_to_w
    ife [a + 0], 'p'
        set pc, stmt_5_p
    ife [a + 0], 'r'
        set pc, stmt_5_r
    ifn [a + 0], 'w'
        set pc, pop
    ife [a + 1], 'h'
        ife [a + 2], 'i'
            ife [a + 3], 'l'
                ife [a + 4], 'e'
                    set c, token_while
    set pc, pop

:stmt_5_p
    ife [a + 1], 'r'
        ife [a + 2], 'i'
            ife [a + 3], 'n'
                ife [a + 4], 't'
                    set c, token_print
    set pc, pop

:stmt_5_r
    ife [a + 1], 'a'
        set pc, stmt_5_ra
    ifn [a + 1], 'e'
        set pc, pop
    ife [a + 2], 's'
        ife [a + 3], 'e'
            ife [a + 4], 't'
                set c, token_reset
    set pc, pop

:stmt_5_ra
    ife [a + 2], 'i'
        ife [a + 3], 's'
            ife [a + 4], 'e'
                set c, token_raise
    set pc, pop

:stmt_5_b_to_f
    ife [a + 0], 'b'
        set pc, stmt_5_b
    ifn [a + 0], 'f'
        set pc, pop
    ife [a + 1], 'a'
        ife [a + 2], 'l'
            ife [a + 3], 's'
                ife [a + 4], 'e'
                    set c, token_false
    set pc, pop

:stmt_5_b
    ife [a + 1], 'r'
        ife [a + 2], 'e'
            ife [a + 3], 'a'
                ife [a + 4], 'k'
                    set c, token_break
    set pc, pop

:stmt_6
    ife [a + 0], 'e'
        set pc, stmt_6_e
    ifn [a + 0], 'r'
        set pc, pop
    ife [a + 1], 'e'
        ife [a + 2], 't'
            ife [a + 3], 'u'
                ife [a + 4], 'r'
                    ife [a + 5], 'n'
                        set c, token_return
    set pc, pop

:stmt_6_e
    ife [a + 1], 'x'
        ife [a + 2], 'c'
            ife [a + 3], 'e'
                ife [a + 4], 'p'
                    ife [a + 5], 't'
                        set c, token_except
    set pc, pop

:stmt_8
    ife [a + 0], 'c'
        ife [a + 1], 'o'
            ife [a + 2], 'n'
                ife [a + 3], 't'
                    ife [a + 4], 'i'
                        ife [a + 5], 'n'
                            ife [a + 6], 'u'
                                ife [a + 7], 'e'
                                    set c, token_continue
    set pc, pop
